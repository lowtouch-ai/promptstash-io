(()=>{function e(e,t,n){if("sendPrompt"===e.action)if(t){if(console.log("Setting prompt:",e.prompt),"DIV"===t.tagName&&"true"===t.contentEditable&&t.classList.contains("ProseMirror")){t.innerHTML="";const n=e.prompt.split("\n");t.innerHTML=n.map((e=>`<p>${e}<br></p>`)).join(""),console.log("Cleared and set innerHTML for ChatGPT ProseMirror div with <p> and <br> tags, preserving empty lines.")}else"DIV"===t.tagName&&"true"===t.contentEditable?(t.innerHTML="",t.innerHTML=e.prompt.replace(/\n/g,"<br>"),console.log("Cleared and set innerHTML for contenteditable div with <br> for newlines.")):(t.value="",t.value=e.prompt,console.log("Cleared and set value for input/textarea."));t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),t.focus(),console.log("Dispatched input and change events."),n({success:!0})}else console.log("No input field found for sendPrompt"),n({success:!1});else if("getPrompt"===e.action)if(t){let e;if("DIV"===t.tagName&&"true"===t.contentEditable&&t.classList.contains("ProseMirror")){const n=Array.from(t.querySelectorAll("p"));n.length>0?(e=n.map((e=>e.textContent.trimEnd())).join("\n"),console.log("Retrieved prompt from ChatGPT ProseMirror div with empty lines preserved:",e)):(e=t.textContent.replace(/\n+/g,"\n").trimEnd(),console.log("Retrieved prompt from ChatGPT ProseMirror div (fallback):",e))}else"DIV"===t.tagName&&"true"===t.contentEditable?(e=t.innerHTML.replace(/<br\s*\/?>/gi,"\n").replace(/<\/?[^>]+(>|$)/g,"").trimEnd(),console.log("Retrieved prompt from contenteditable div:",e)):(e=t.value||"",console.log("Retrieved prompt from input/textarea:",e));n({prompt:e})}else console.log("No input field found for getPrompt"),n({prompt:""});else if("getSelectedText"===e.action){const e=window.getSelection().toString();console.log("Retrieved selected text:",e),n({selectedText:e})}}function t(){const e=document.querySelectorAll("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]");return Array.from(e).find((e=>null!==e.offsetParent))}function n(e,t){const n=document.createElement("div");n.id="promptstash-widget",n.innerHTML=`\n      <button class="extension-button" aria-label="Open PromptStash" title="Open PromptStash">\n        <img src="${chrome.runtime.getURL("icon48.png")}" alt="PromptStash Icon" aria-hidden="true" draggable="false" style="width: 30px; height: 30px;">\n      </button>\n  `,document.body.appendChild(n);let o={x:-100,y:-90};function i(){if(!t||!t.offsetParent)return;const e=t.getBoundingClientRect(),i=n.getBoundingClientRect(),r=t.parentElement.getBoundingClientRect(),{newLeft:l,newTop:s}=function(e,t,n){let i=e.right+window.scrollX+o.x,r=e.bottom+window.scrollY+o.y;return i=Math.max(t.left+window.scrollX,Math.min(i,t.right+window.scrollX-n.width)),r=Math.max(t.top+window.scrollY,Math.min(r,t.bottom+window.scrollY-n.height)),{newLeft:i,newTop:r}}(e,r,i);n.style.position="absolute",n.style.top=`${s}px`,n.style.left=`${l}px`,n.style.zIndex="9999",n.style.transition="top 0.3s ease, left 0.3s ease"}chrome.storage.local.get(["widgetOffset"],(e=>{e.widgetOffset&&(o=e.widgetOffset),i()})),i(),n.addEventListener("mouseenter",(()=>{n.style.transform="scale(1.02)"})),n.addEventListener("mouseleave",(()=>{n.style.transform="scale(1)"}));const r=new ResizeObserver(s((()=>{i()}),50));r.observe(t),n.resizeObserver=r;const l=s((()=>i()),50),a=()=>l(),c=()=>l();window.addEventListener("resize",a),window.addEventListener("scroll",c);const d=function(e){let t=e.parentElement;for(;t&&t!==document.body;){if(t.scrollHeight>t.clientHeight||t.classList.contains("chat-container"))return t;t=t.parentElement}return null}(t);d&&d.addEventListener("scroll",c),n.resizeListener=a,n.scrollListener=c,n.chatContainer=d,function(e,t){let n,i,r=!1;e.addEventListener("mousedown",(t=>{r=!0,n=t.clientX-e.getBoundingClientRect().left,i=t.clientY-e.getBoundingClientRect().top,e.style.transition="none"})),document.addEventListener("mousemove",(l=>{if(r){const r=t.getBoundingClientRect(),s=e.getBoundingClientRect(),a=t.parentElement.getBoundingClientRect();let c=l.clientX-n,d=l.clientY-i;c=Math.max(a.left+window.scrollX,Math.min(c,a.right+window.scrollX-s.width)),d=Math.max(a.top+window.scrollY,Math.min(d,a.bottom+window.scrollY-s.height)),e.style.left=`${c}px`,e.style.top=`${d}px`;const u=c-(r.right+window.scrollX),p=d-(r.bottom+window.scrollY);o={x:u,y:p},chrome.storage.local.set({widgetOffset:o},(()=>{console.log("Widget offset saved:",o)}))}})),document.addEventListener("mouseup",(()=>{r=!1,e.style.transition="top 0.3s ease, left 0.3s ease"}))}(n,t);const u=n.querySelector(".extension-button");let p,m,g,f=!1;return u.addEventListener("mousedown",(e=>{p=e.clientX,m=e.clientY,f=!1,g=setTimeout((()=>{f=!0}),300)})),u.addEventListener("mousemove",(e=>{(Math.abs(e.clientX-p)>1||Math.abs(e.clientY-m)>1)&&(f=!0)})),u.addEventListener("mouseup",(e=>{clearTimeout(g),f||(document.getElementById("promptstash-popup"),chrome.runtime.sendMessage({action:"togglePopup"})),f=!1})),u.addEventListener("mouseleave",(()=>{clearTimeout(g)})),n}chrome.runtime.onMessage.addListener(((n,i,r)=>{console.log("Received message:",n);let l=o||t();if(l?console.log("Input field found:",l,"Tag:",l.tagName,"Visible:",null!==l.offsetParent):console.log("No visible input field found with initial querySelector."),!l&&("sendPrompt"===n.action||"getPrompt"===n.action))return console.log("Retrying to find input field after 500ms..."),setTimeout((()=>{l=o||t(),l?console.log("Input field found on retry:",l,"Tag:",l.tagName,"Visible:",null!==l.offsetParent):console.log("No visible input field found after retry."),e(n,l,r)}),500),!0;e(n,l,r)})),document.addEventListener("click",(e=>{const t=document.getElementById("promptstash-popup");t&&!t.contains(e.target)&&chrome.runtime.sendMessage({action:"closePopup"})}));let o=null,i=null,r=null,l=!1;function s(e,t){let n;return function(...o){clearTimeout(n),n=setTimeout((()=>e.apply(this,o)),t)}}const a=s((function(e=null){let s=e||o||t(),c=function(e){if(!e)return null;let t=e.parentElement;for(;t&&t!==document.body;){const e=t.querySelectorAll('button, [role="button"], [type="submit"]').length>0,n="FORM"===t.tagName||"DIV"===t.tagName&&t.classList.contains("input-container");if(e||n||t.querySelector('[aria-label*="send" i], [aria-label*="submit" i]'))return t;t=t.parentElement}return e.parentElement||document.body}(s);s&&c?s&&c&&(l?s===o&&c===i||(r&&(r.resizeObserver&&r.resizeObserver.disconnect(),r.resizeListener&&window.removeEventListener("resize",r.resizeListener),r.scrollListener&&r.chatContainer&&r.chatContainer.removeEventListener("scroll",r.scrollListener),r.scrollListener&&window.removeEventListener("scroll",r.scrollListener),r.remove()),r=n(0,c),o=s,i=c,console.log("Widget recreated for updated input field and container:",s,c)):(r=n(0,c),o=s,i=c,l=!0,console.log("Widget created for new input field and container:",s,c))):l&&r?(console.log("Input field/container temporarily unavailable, retrying in 500ms..."),setTimeout(a,500)):console.log("No valid input field/container found, skipping widget creation.")}),100),c=s((function(e){const t=e.target;t.matches("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]")&&null!==t.offsetParent&&(console.log("Interaction detected on valid input/edit field:",t),o=t,a(t))}),50);document.addEventListener("focusin",c,!0),document.addEventListener("input",c,!0),document.addEventListener("click",c,!0),a(),new MutationObserver(s((()=>{document.activeElement&&document.activeElement.matches("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]")||a()}),100)).observe(document.body,{childList:!0,subtree:!0})})();