(()=>{function e(e,t,n){if("sendPrompt"===e.action)if(t){if(console.log("Setting prompt:",e.prompt),"DIV"===t.tagName&&"true"===t.contentEditable&&t.classList.contains("ProseMirror")){t.innerHTML="";const n=e.prompt.split("\n");t.innerHTML=n.map((e=>`<p>${e}<br></p>`)).join(""),console.log("Cleared and set innerHTML for ChatGPT ProseMirror div with <p> and <br> tags, preserving empty lines.")}else"DIV"===t.tagName&&"true"===t.contentEditable?(t.innerHTML="",t.innerHTML=e.prompt.replace(/\n/g,"<br>"),console.log("Cleared and set innerHTML for contenteditable div with <br> for newlines.")):(t.value="",t.value=e.prompt,console.log("Cleared and set value for input/textarea."));t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),t.focus(),console.log("Dispatched input and change events."),n({success:!0})}else console.log("No input field found for sendPrompt"),n({success:!1});else if("getPrompt"===e.action)if(t){let e;if("DIV"===t.tagName&&"true"===t.contentEditable&&t.classList.contains("ProseMirror")){const n=Array.from(t.querySelectorAll("p"));n.length>0?(e=n.map((e=>e.textContent.trimEnd())).join("\n"),console.log("Retrieved prompt from ChatGPT ProseMirror div with empty lines preserved:",e)):(e=t.textContent.replace(/\n+/g,"\n").trimEnd(),console.log("Retrieved prompt from ChatGPT ProseMirror div (fallback):",e))}else"DIV"===t.tagName&&"true"===t.contentEditable?(e=t.innerHTML.replace(/<br\s*\/?>/gi,"\n").replace(/<\/?[^>]+(>|$)/g,"").trimEnd(),console.log("Retrieved prompt from contenteditable div:",e)):(e=t.value||"",console.log("Retrieved prompt from input/textarea:",e));n({prompt:e})}else console.log("No input field found for getPrompt"),n({prompt:""});else if("getSelectedText"===e.action){const e=window.getSelection().toString();console.log("Retrieved selected text:",e),n({selectedText:e})}}function t(e,t){function n(){const e=t.getBoundingClientRect();r.style.position="absolute",r.style.top=`${e.top+window.scrollY+10}px`,r.style.left=e.right+window.scrollX-50+"px",r.style.zIndex="10000",r.style.opacity="0.5"}r=document.createElement("div"),r.id="promptstash-widget",r.innerHTML=`\n      <button class="extension-button" aria-label="Open PromptStash" title="Open PromptStash">\n        <img src="${chrome.runtime.getURL("icon48.png")}" alt="PromptStash Icon" aria-hidden="true" draggable="false" style="width: 30px; height: 30px;">\n      </button>\n  `,document.body.appendChild(r),n(),r.addEventListener("mouseenter",(()=>{r.style.opacity="1"})),r.addEventListener("mouseleave",(()=>{r.style.opacity="0.5"}));const o=new ResizeObserver((()=>{n()}));o.observe(t),r.resizeObserver=o;const i=()=>n(),l=()=>n();window.addEventListener("resize",i),window.addEventListener("scroll",l),r.resizeListener=i,r.scrollListener=l,function(e,t){let n,o,r=!1;e.addEventListener("mousedown",(t=>{r=!0,n=t.clientX-e.getBoundingClientRect().left,o=t.clientY-e.getBoundingClientRect().top,e.style.cursor="grabbing"})),document.addEventListener("mousemove",(i=>{if(r){const r=t.getBoundingClientRect(),l=e.getBoundingClientRect();let a=i.clientX-n,s=i.clientY-o;a=Math.max(r.left+window.scrollX,Math.min(a,r.right+window.scrollX-l.width)),s=Math.max(r.top+window.scrollY,Math.min(s,r.bottom+window.scrollY-l.height)),e.style.left=`${a}px`,e.style.top=`${s}px`}})),document.addEventListener("mouseup",(()=>{r=!1,e.style.cursor="grab"}))}(r,t);const a=r.querySelector(".extension-button");let s,d,c,u=!1;a.addEventListener("mousedown",(e=>{s=e.clientX,d=e.clientY,u=!1,c=setTimeout((()=>{u=!0}),200)})),a.addEventListener("mousemove",(e=>{(Math.abs(e.clientX-s)>1||Math.abs(e.clientY-d)>1)&&(u=!0)})),a.addEventListener("mouseup",(e=>{clearTimeout(c),u||(document.getElementById("promptstash-popup")?chrome.runtime.sendMessage({action:"closePopup"}):chrome.runtime.sendMessage({action:"togglePopup"})),u=!1})),a.addEventListener("mouseleave",(()=>{clearTimeout(c)}))}chrome.runtime.onMessage.addListener(((t,n,o)=>{console.log("Received message:",t);let r=document.querySelectorAll("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]"),i=Array.from(r).find((e=>null!==e.offsetParent));if(i?console.log("Input field found:",i,"Tag:",i.tagName,"Visible:",null!==i.offsetParent):console.log("No visible input field found with initial querySelector."),!i&&("sendPrompt"===t.action||"getPrompt"===t.action))return console.log("Retrying to find input field after 500ms..."),setTimeout((()=>{r=document.querySelectorAll("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]"),i=Array.from(r).find((e=>null!==e.offsetParent)),i?console.log("Input field found on retry:",i,"Tag:",i.tagName,"Visible:",null!==i.offsetParent):console.log("No visible input field found after retry."),e(t,i,o)}),500),!0;e(t,i,o)})),document.addEventListener("click",(e=>{const t=document.getElementById("promptstash-popup");t&&!t.contains(e.target)&&chrome.runtime.sendMessage({action:"closePopup"})}));let n=null,o=null,r=null,i=!1;const l=function(e){let t;return function(...n){clearTimeout(t),t=setTimeout((()=>e.apply(this,n)),100)}}((function(){const e=function(){const e=document.querySelectorAll("div#prompt-textarea.ProseMirror[contenteditable='true'], [contenteditable='true'][role='textbox'], textarea:not([disabled]), input[type='text']:not([disabled]), [contenteditable='true'][aria-label*='prompt' i], textarea[aria-label*='prompt' i], input[aria-label*='prompt' i]");return Array.from(e).find((e=>null!==e.offsetParent))}(),a=function(e){if(!e)return null;let t=e.parentElement;for(;t&&t!==document.body;){const e=t.querySelectorAll('button, [role="button"], [type="submit"]').length>0,n="FORM"===t.tagName||"DIV"===t.tagName&&t.classList.contains("input-container");if(e||n||t.querySelector('[aria-label*="send" i], [aria-label*="submit" i]'))return t;t=t.parentElement}return e.parentElement||document.body}(e);if(!e||!a&&i&&r)return console.log("Input field/container temporarily unavailable, retrying in 500ms..."),void setTimeout(l,500);e&&a?i?e===n&&a===o||(r&&(r.resizeObserver&&r.resizeObserver.disconnect(),r.resizeListener&&window.removeEventListener("resize",r.resizeListener),r.scrollListener&&window.removeEventListener("scroll",r.scrollListener),r.remove()),t(0,a),n=e,o=a,console.log("Widget recreated for updated input field and container:",e,a)):(t(0,a),n=e,o=a,i=!0,console.log("Widget created for new input field and container:",e,a)):i&&r&&(console.log("No input field/container found, retaining widget and retrying..."),setTimeout(l,500))}));l(),new MutationObserver((()=>{l()})).observe(document.body,{childList:!0,subtree:!0})})();